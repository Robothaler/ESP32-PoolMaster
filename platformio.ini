; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = serial_upload

[env]
platform = espressif32
board = esp32-s3-devkitc-1-n16r8v
;TODO: update partition table to be aligned with n16r8
framework = arduino
;board_build.partitions = partitions-4MB-fat.csv
upload_speed = 921600
monitor_speed = 115200
monitor_rts = 0
monitor_dtr = 0
monitor_raw = yes
debug_speed = 1200
debug_tool = esp-builtin
debug_init_break = tbreak setup

build_flags =
	-I include
	-DCORE_DEBUG_LEVEL=5
	-D DISABLE_IMAP
			  -DDISABLE_FLASH 
			  -D DISABLE_SD
			  -D DISABLE_NTP_TIME
			  -D SILENT_MODE

lib_ldf_mode = chain+
lib_extra_dirs =
	${PROJECT_DIR}\..\include
	${PROJECT_DIR}\..\lib

; Libraries. Note that the ADS1115 library must be installed manually from 
; https://lygte-info.dk/pic/Projects/ADS1115Library/ADS1115.zip
; The symlink here below points to the directory where the library is 
; installed: change the path according to your own setup.
; OneWire lib must be the stickbreaker version: https://github.com/stickbreaker/OneWire
lib_deps =
	Arduino_DebugUtils @ 1.4.0
	paulstoffregen/Time @ 1.6
	paulstoffregen/OneWire @ 2.3.7
	br3ttb/PID @ 1.2.1
	ADS1115 @ 1.0.0
	adafruit/RTClib
	256dpi/MQTT @ ^2.4.8
	robtillaart/RunningMedian @ 0.3.9
	bblanchon/ArduinoJson @ 6.17.2
	milesburton/DallasTemperature @ 3.9.1
	me-no-dev/AsyncTCP @ 1.1.1
	marvinroger/AsyncMqttClient @ 0.8.2
	adafruit/Adafruit BME280 Library@ 2.2.2
	seithan/Easy Nextion Library @ 1.0.6
;	mobizt/ESP Mail Client @ ^3.4.19

[env:serial_upload]
build_type = debug
lib_deps = ${env.lib_deps}
build_flags = 
	${env.build_flags}
	-D DEVT
upload_protocol = esptool
upload_port = COM14
monitor_port = COM14

[env:OTA_upload]
lib_deps = ${env.lib_deps}
build_flags =
	${env.build_flags}
upload_protocol = espota
upload_port = 192.168.178.132
upload_flags = 
	--port=8063
	--auth=Fgixy001